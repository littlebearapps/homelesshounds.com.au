---
interface Props {
  userType?: 'general' | 'adopter' | 'volunteer' | 'foster';
  source?: string;
  hideTitle?: boolean;
  compact?: boolean;
  theme?: 'light' | 'dark';
}

const {
  userType = 'general',
  source = 'website',
  hideTitle = false,
  compact = false,
  theme = 'light'
} = Astro.props;

const turnstileSiteKey = import.meta.env.TURNSTILE_SITE_KEY;
---

<div class={`newsletter-signup ${compact ? 'compact' : ''}`}>
  {!hideTitle && (
    <div class="text-center mb-6">
      <h3 class={`text-lg font-bold mb-2 ${theme === 'dark' ? 'text-white' : 'text-gray-900'}`}>
        Stay Connected with Our Rescues
      </h3>
      <p class={`text-sm ${theme === 'dark' ? 'text-gray-300' : 'text-gray-600'}`}>
        Get updates on new animals, adoption success stories, and how you can help.
      </p>
    </div>
  )}

  <form class="newsletter-form space-y-4" data-user-type={userType} data-source={source}>
    <div class="flex gap-3">
      <div class="flex-1">
        <input
          type="email"
          name="email"
          placeholder="Enter your email address"
          required
          class={`w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:border-transparent text-sm ${
            theme === 'dark'
              ? 'bg-gray-800 border-gray-700 text-white placeholder-gray-400'
              : 'bg-white border-gray-300 text-gray-900 placeholder-gray-500'
          }`}
        />
      </div>
      <button
        type="submit"
        class="bg-indigo-600 text-white px-4 py-2 rounded-md hover:bg-indigo-700 transition-colors text-sm font-medium whitespace-nowrap"
      >
        Subscribe
      </button>
    </div>

    {!compact && (
      <div class="flex gap-3">
        <input
          type="text"
          name="firstName"
          placeholder="First name (optional)"
          class={`flex-1 px-3 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:border-transparent text-sm ${
            theme === 'dark'
              ? 'bg-gray-800 border-gray-700 text-white placeholder-gray-400'
              : 'bg-white border-gray-300 text-gray-900 placeholder-gray-500'
          }`}
        />
        <input
          type="text"
          name="lastName"
          placeholder="Last name (optional)"
          class={`flex-1 px-3 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:border-transparent text-sm ${
            theme === 'dark'
              ? 'bg-gray-800 border-gray-700 text-white placeholder-gray-400'
              : 'bg-white border-gray-300 text-gray-900 placeholder-gray-500'
          }`}
        />
      </div>
    )}

    <div class="flex items-start gap-3">
      <input
        type="checkbox"
        id="marketingOptIn"
        name="marketingOptIn"
        value="true"
        class="mt-1 h-4 w-4 text-indigo-600 border-gray-300 rounded focus:ring-indigo-500"
      />
      <label for="marketingOptIn" class={`text-xs leading-relaxed ${theme === 'dark' ? 'text-gray-300' : 'text-gray-600'}`}>
        I would like to receive newsletters and updates from Homeless Hounds.
        You can unsubscribe at any time.
        <a href="/privacy-policy" target="_blank" class={`underline ${theme === 'dark' ? 'text-indigo-400 hover:text-indigo-300' : 'text-indigo-600 hover:text-indigo-700'}`}>
          Privacy Policy
        </a>
      </label>
    </div>

    <!-- Turnstile CAPTCHA (only shown when marketing opt-in is checked) -->
    {turnstileSiteKey && (
      <div class="turnstile-container hidden">
        <div
          class="cf-turnstile"
          data-sitekey={turnstileSiteKey}
          data-theme="light"
          data-size="compact"
        ></div>
      </div>
    )}

    <!-- Hidden fields -->
    <input type="hidden" name="userType" value={userType} />
    <input type="hidden" name="source" value={source} />

    <!-- Loading state -->
    <div class="loading-message hidden text-center py-2">
      <div class="inline-flex items-center text-sm text-gray-600">
        <svg class="animate-spin -ml-1 mr-2 h-4 w-4 text-indigo-600" fill="none" viewBox="0 0 24 24">
          <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
          <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
        </svg>
        Subscribing...
      </div>
    </div>

    <!-- Result message -->
    <div class="result-message hidden text-center py-2 text-sm"></div>
  </form>
</div>

<!-- Turnstile script -->
{turnstileSiteKey && (
  <script src="https://challenges.cloudflare.com/turnstile/v0/api.js" async defer></script>
)}

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const forms = document.querySelectorAll('.newsletter-form');

    forms.forEach(form => {
      const marketingCheckbox = form.querySelector('#marketingOptIn') as HTMLInputElement;
      const turnstileContainer = form.querySelector('.turnstile-container') as HTMLElement;
      const loadingMessage = form.querySelector('.loading-message') as HTMLElement;
      const resultMessage = form.querySelector('.result-message') as HTMLElement;

      // Show/hide Turnstile based on marketing opt-in
      if (marketingCheckbox && turnstileContainer) {
        marketingCheckbox.addEventListener('change', function() {
          if (this.checked) {
            turnstileContainer.classList.remove('hidden');
          } else {
            turnstileContainer.classList.add('hidden');
          }
        });
      }

      form.addEventListener('submit', async function(e) {
        e.preventDefault();

        const formData = new FormData(form);
        const marketingOptIn = formData.get('marketingOptIn') === 'true';

        // Show loading state
        loadingMessage.classList.remove('hidden');
        resultMessage.classList.add('hidden');

        try {
          const response = await fetch('/api/newsletter/subscribe', {
            method: 'POST',
            body: formData
          });

          const result = await response.json();

          // Hide loading state
          loadingMessage.classList.add('hidden');

          // Show result
          resultMessage.textContent = result.message || result.error;
          resultMessage.className = `result-message text-center py-2 text-sm ${
            result.success ? 'text-green-700 bg-green-50 border border-green-200' : 'text-red-700 bg-red-50 border border-red-200'
          } rounded-md px-3`;
          resultMessage.classList.remove('hidden');

          if (result.success) {
            // Reset form on success
            form.reset();
            if (turnstileContainer) {
              turnstileContainer.classList.add('hidden');
            }
          }

        } catch (error) {
          // Hide loading state
          loadingMessage.classList.add('hidden');

          // Show error
          resultMessage.textContent = 'An error occurred. Please try again.';
          resultMessage.className = 'result-message text-center py-2 text-sm text-red-700 bg-red-50 border border-red-200 rounded-md px-3';
          resultMessage.classList.remove('hidden');
        }
      });
    });
  });
</script>

<style>
  .newsletter-signup.compact .text-center {
    margin-bottom: 1rem;
  }

  .newsletter-signup.compact h3 {
    font-size: 1rem;
    margin-bottom: 0.5rem;
  }

  .newsletter-signup.compact p {
    font-size: 0.75rem;
  }
</style>